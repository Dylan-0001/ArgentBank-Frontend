swagger: '2.0'
info:
  title: Bank Argent API documentation
  description: Contains all available API endpoints in this codebase
  version: '1.0.0'
  termsOfService: 'http://swagger.io/terms/'
host: localhost:3001
basePath: /api/v1
schemes:
  - http
paths:
  /user/login:
    post:
      tags:
        - User Module
      summary: Login
      description: API for Login
      parameters:
        - in: body
          name: body
          description: Login Payload
          required: true
          schema:
            $ref: '#/definitions/Login'
      produces:
        - application/json
      responses:
        '200':
          description: Login Successfully
          schema:
            $ref: '#/definitions/LoginResponse'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error
  /user/signup:
    post:
      tags:
        - User Module
      summary: Signup
      description: API for Signup
      parameters:
        - in: body
          name: body
          description: Signup Payload
          required: true
          schema:
            $ref: '#/definitions/User'
      produces:
        - application/json
      responses:
        '200':
          description: Signup Successfully
          schema:
            $ref: '#/definitions/ApiResponse'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error
  /user/profile:
    get:
      security:
        - Bearer: []
      tags:
        - User Module
      summary: User Profile API
      description: API for fetching a user profile
      #produces:
       # - application/json
      responses:
        '200':
          description: User profile retrieved successully
          schema:
            $ref: '#/definitions/ApiResponse'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error
    put:
      security:
        - Bearer: []
      tags:
        - User Module
      summary: User Profile API
      description: API for updating a user profile
      parameters:
        - in: body
          name: body
          description: Update user profile attributes
          required: true
          schema:
            $ref: '#/definitions/UserProfile'
      produces:
        - application/json
      responses:
        '200':
          description: User profile retrieved successully
          schema:
            $ref: '#/definitions/ApiResponse'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error
  /user/profile/accounts:
    get:
      security:
        - Bearer: []
      tags:
        - Bank Account Module
      summary: Get all bank accounts
      description: API for fetching a bank account list
      #produces:
       # - application/json
      responses:
        '200':
          description: list of bank account retrieved successully
          schema:
            type: array
            items:
              $ref: '#/definitions/BankAccount'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error
  /user/profile/accounts/{accountID}:
    get:
      security:
        - Bearer: []
      tags:
        - Bank Account Module
      summary: Get a bank account by id
      parameters:
        - in: path
          name: accountID
          description: Numeric ID of the bank account to get
          required: true
          type: integer
          format: int32
          minimum: 1
      description: API for fetching a specific bank account informations
      #produces:
       # - application/json
      responses:
        '200':
          description: bank account informations retrieved successully
          schema:
            $ref: '#/definitions/BankAccount'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error
  /user/profile/accounts/{accountID}/transactions:
    get:
      security:
        - Bearer: []
      tags:
        - Transaction Module
      summary: Get all transactions from bank account
      description: API for fetching a transaction list from bank account
      parameters:
        - in: path
          name: accountID
          description: Numeric ID of the bank account
          required: true
          type: integer
          format: int32
          minimum: 1
      responses:
        '200':
          description: list of transaction retrieved successully
          schema:
            type: array
            items:
              $ref: '#/definitions/Transaction'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error
  /user/profile/accounts/{accountID}/transactions/{transactionID}:
    get:
      security:
        - Bearer: []
      tags:
        - Transaction Module
      summary: Get a transaction by id
      parameters:
        - in: path
          name: accountID
          description: Numeric ID of the bank account
          required: true
          type: integer
          format: int32
          minimum: 1
        - in: path
          name: transactionID
          description: Numeric ID of the transaction
          required: true
          type: integer
          format: int32
          minimum: 1
      responses:
        '200':
          description: transaction informations retrieved successully
          schema:
            $ref: '#/definitions/Transaction'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error
    put:
      security:
        - Bearer: []
      tags:
        - Transaction Module
      summary: Transaction API
      description: API for updating a transaction
      parameters:
        - in: body
          name: body
          description: Update transaction attributes
          required: true
          schema:
            $ref: '#/definitions/TransactionUpdate'
      produces:
        - application/json
      responses:
        '200':
          description: Transaction retrieved successully
          schema:
            $ref: '#/definitions/ApiResponse'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error
securityDefinitions:
  Bearer:
    type: apiKey
    name: Authorization
    in: header
definitions:
  User:
    properties:
      email:
        type: string
        description: user email
      password:
        type: string
        description: user password
      firstName:
        type: string
        description: user first name
      lastName:
        type: string
        description: user last name
      userName:
        type: string
        description: user public name
  BankAccount:
    properties:
      name:
        type: string
        description: bank account name
      balance:
        type: number
        description: bank account balance
      available:
        type: boolean
        description: bank account balance available
      transactions:
        type: array
        items:
          $ref: "#/definitions/Transaction"
        description: list of transactions
  Transaction:
    properties:
      date:
        type: string
        description: transaction date time
      description:
        type: string
        description: transaction description
      amount:
        type: number
        description: transaction amount
      balance:
        type: number
        description: balance value after transaction
      type:
        type: string
        description: transaction type
      category:
        type: string
        description: transaction category
      note:
        type: string
        description: transaction note
  Login:
    properties:
      email:
        type: string
        description: user email
      password:
        type: string
        description: user password
  ApiResponse:
    type: object
    properties:
      status:
        type: integer
      message:
        type: string
      body:
        type: object
        properties:
          id:
            type: string
          email:
            type: string
  LoginResponse:
    type: object
    properties:
      token:
        type: string
  UserProfile:
    type: object
    properties:
      userName:
        type: string
  TransactionUpdate:
    type: object
    properties:
      category:
        type: string
      note:
        type: string
